{"version":3,"sources":["Assets/stats.jpg","Assets/work.jpg","Assets/sunset.jpg","Components/Gradient.js","Components/Navbar.js","Components/Home.js","Components/ProjectCol.js","Components/Portfolio.js","App.js","serviceWorker.js","context.js","index.js"],"names":["module","exports","GradientTop","styled","div","Navbar","Fragment","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","src","height","alt","role","aria-haspopup","aria-labelledby","Component","nav","Home","ProjectCol","props","console","log","link","Col","md","sm","xs","Card","className","Img","variant","imgUrl","ImgOverlay","Body","Button","Portfolio","Container","Row","statsImg","title","text","workImg","App","process","basename","exact","path","component","Boolean","window","location","hostname","match","ProductContext","React","createContext","ProductProvider","state","products","Provider","value","this","children","Consumer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.594673be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stats.9a9cab82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/work.e6b5de8e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.6695f8d2.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const GradientTop = styled.div`\r\n  height: 17px;\r\n  width: 100%;\r\n  background: linear-gradient(-85deg, #033f63ff, #fedc97ff);\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GradientTop } from \"./Gradient\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <GradientTop></GradientTop>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse order-2 order-lg-0 justify-content-end w-100\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav nav-fill w-50\">\r\n              <li class=\"nav-item nav-fill w-100\">\r\n                <a class=\"nav-link nav-fill w-100\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item nav-fill w-100\">\r\n                <a class=\"nav-link \" href={(process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : \"\") + \"/projects\"}>\r\n                  Portfolio\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <a class=\"navbar-brand mx-auto order-1 order-lg-1 p-0\" href=\"/#\">\r\n            <img src=\"/img/jo.png\" height=\"80\" alt=\"\" />\r\n          </a>\r\n\r\n          <div class=\"collapse navbar-collapse order-3 order-lg-2 w-100\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav nav-fill w-50\">\r\n              <li class=\"nav-item dropdown nav-fill w-100\">\r\n                <a\r\n                  class=\"nav-link dropdown-toggle\"\r\n                  href=\"/#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <a class=\"dropdown-item\" href=\"/\">\r\n                    Action\r\n                  </a>\r\n                  <a class=\"dropdown-item\" href=\"/\">\r\n                    Another action\r\n                  </a>\r\n                  <div class=\"dropdown-divider\"></div>\r\n                  <a class=\"dropdown-item\" href=\"/\">\r\n                    Something else here\r\n                  </a>\r\n                </div>\r\n              </li>\r\n              <li class=\"nav-item nav-fill w-100\">\r\n                <a class=\"nav-link\" href=\"/Contact\">\r\n                  Contact\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst NavWrapper = styled.nav`\r\n  .nav-link {\r\n    color: var(--mainBlue) !important;\r\n    font-size: 1.3rem;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div class=\"home\">\r\n      <h1 class=\"home\">Joseph A. Ogoley</h1>\r\n      <p>\r\n        Hi, I'm a fullstack web developer. I build scalable backends and beautiful front ends with the useful combination of new age tools, CICD, and security.\r\n        If your interested, look around the other tabs to see some of my work or get in touch with me!\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, Col, Button } from \"react-bootstrap\";\r\n\r\nexport default function ProjectCol(props) {\r\n  console.log(props.link)\r\n  return (\r\n    <Col md={4} sm={6} xs={8}>\r\n    <a href={props.link}>\r\n      <Card className=\"text-center\">\r\n        <Card.Img variant=\"top\" src={props.imgUrl} />\r\n        <Card.ImgOverlay>\r\n          <Card.Body className=\"text-center\">Consulting Website with application</Card.Body>\r\n          <Button variant=\"primary\" className=\"customBtn\">View Website</Button>\r\n        </Card.ImgOverlay>\r\n        \r\n      </Card>\r\n    </a>\r\n    </Col>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ProjectCol from \"./ProjectCol\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport statsImg from \"../Assets/stats.jpg\";\r\nimport workImg from \"../Assets/work.jpg\";\r\nimport sunsetImg from \"../Assets/sunset.jpg\";\r\n\r\nexport default function Portfolio() {\r\n  return (\r\n    <Container className=\"portfolio\">\r\n      <Row className=\"m-md-4\">\r\n        <ProjectCol link=\"https://www.google.com\" imgUrl={statsImg} title=\"GeomotrY Website\" text=\"Use CSS to create 3D geometrical environments\" />\r\n        <ProjectCol link=\"https://www.google.com\" imgUrl={workImg} title=\"Quiz App\" text=\"A socket.io app that allows people to play a quiz game together\" />\r\n        <ProjectCol\r\n          link=\"https://www.google.com\"\r\n          imgUrl={statsImg}\r\n          title=\"Database UI\"\r\n          text=\"This website is a ReactJS front end that allows users to do RDBMS.\"\r\n        />\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n/*\r\n\r\n  <ProjectCol link=\"https://www.google.com\" imgUrl={workImg} title=\"Test Title\" text=\"This is just a test\" />\r\n      <ProjectCol link=\"https://www.google.com\" imgUrl={sunsetImg} title=\"Test Title\" text=\"This is just a test\" />\r\n*/\r\n","import React from \"react\";\n// import { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home\";\nimport Portfolio from \"./Components/Portfolio\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  let customUrl = process.env.NODE_ENV === 'production' ? '/' + process.env.PUBLIC_URL : \"\"\n  console.log(\"WTF\", process.env.NODE_ENV,\" WTF2: \" , customUrl, \" pubURL: \", process.env.PUBLIC_URL)\n  return (\n    <React.Fragment>\n      <BrowserRouter basename={customUrl}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/projects\" component={Portfolio} />\n        </Switch>\n      </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\n/*\nSWITCH EXAMPLE \n\n\n<Switch>\n        <Route exact path=\"/\" component={ProductList}></Route>\n        <Route path=\"/details\" component={Details}></Route>\n        <Route component={Default}></Route>}\n</Switch>\n*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\nconst ProductContext = React.createContext();\r\n//Provider\r\n//Consumer\r\n\r\nclass ProductProvider extends Component {\r\n\r\n    state = {\r\n        products:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    \r\n    /*\r\n    setProducts = () => {\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item =>{\r\n            const singleItem = {...item};\r\n            tempProducts = [...tempProducts, singleItem];\r\n        })\r\n        this.setState(()=>{\r\n            return {products:tempProducts}\r\n        })\r\n    }\r\n\r\n    getItem = (id) => {\r\n        const product = this.state.products.find(item => item.id === id)\r\n            return product \r\n    }\r\n\r\n    handleDetail = (id) =>{\r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {detailProduct:product}\r\n        })\r\n    }\r\n    addToCart = (id) => {\r\n        const tempProducts = [...this.state.products];\r\n        const index = tempProducts.indexOf(this.getItem(id))\r\n        const product = tempProducts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        tempProducts[index] = product\r\n        this.setState(()=> {\r\n            return{ products: tempProducts, cart:[...this.state.cart, product]}\r\n        }, ()=>{\r\n            console.log(this.state)\r\n        })\r\n    }\r\n    openModal = id => {\r\n        const product = this.getItem(id)\r\n        this.setState(()=>{\r\n            return {modalProduct:product,modalOpen:true}\r\n        })\r\n    }\r\n    closeModal = () => {\r\n        this.setState(()=>{\r\n            return {modalOpen:false}\r\n        })\r\n    }\r\n    */\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider \r\n            value={{\r\n                ...this.state\r\n            }}\r\n            >\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n      \r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider, ProductConsumer}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ProductProvider} from './context'\n\nimport 'bootstrap'\n\nReactDOM.render(<ProductProvider><App /></ProductProvider>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}